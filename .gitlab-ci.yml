image: node:11

stages:
  - prepare
  - test
  - deploy
  - publish

variables:
  AWS_DEFAULT_REGION: eu-west-1
  BUCKET_NAME: blockchain-definitions/v6

cache:
  paths:
    - node_modules/

Prepare:
  stage: prepare
  before_script:
    - apt-get update && apt-get install libudev-dev libusb-1.0-0-dev -y
  script:
    - npm i
  artifacts:
    paths:
      - node_modules/
  only:
    - integration

Test:
  stage: test
  artifacts:
    paths:
      - build/
  before_script:
    - apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y netcat && apt-get clean && rm -rf /var/lib/apt/lists/*
  script:
    - npm run compile && npm test
  only:
    - integration
    - master
Check_Coverage:
  stage: test
  before_script:
    - apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y netcat && apt-get clean && rm -rf /var/lib/apt/lists/*
  artifacts:
    paths:
      - coverage/
  script:
    - npm run coverage
  only:
    - integration
    - master

Solhint:
  stage: test
  before_script:
    - apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y netcat && apt-get clean && rm -rf /var/lib/apt/lists/*
  script:
    - npm run compile && npm run solhint
  only:
    - integration
    - master

Kovan:
  stage: deploy
  script:
    - npm run compile && npm run migration:kovan:reset
  artifacts:
    paths:
      - package.json
      - new.metadata.json
      - build/
      - metadata/
  when: manual
  only:
    - integration

Contracts:
  image: "python:latest"
  stage: publish
  artifacts:
    paths:
      - new.metadata.json
  before_script:
    - pip install awscli
  script:
    - aws s3 cp new.metadata.json s3://${BUCKET_NAME}/contracts.json
  only:
    - integration

Artifacts:
  image: "python:latest"
  stage: publish
  artifacts:
    paths:
      - build/
      - metadata/
      - package.json
  before_script:
    - pip install awscli
    - apt update && apt install jq
    - export VERSION=$(cat package.json | jq -r .version)
  script:
    - aws s3 sync build/contracts s3://${BUCKET_NAME}/artifacts/${VERSION}/
    - aws s3 sync metadata/contracts_${VERSION}.json s3://${BUCKET_NAME}/metadata/
  only:
    - integration

Coverage:
  image: "python:latest"
  stage: publish
  artifacts:
    paths:
      - package.json
      - coverage/
  before_script:
    - pip install awscli
    - apt update && apt install jq
    - export VERSION=$(cat package.json | jq -r .version)
  script:
    - aws s3 sync coverage s3://${BUCKET_NAME}/coverage/${VERSION}/
  only:
    - integration
